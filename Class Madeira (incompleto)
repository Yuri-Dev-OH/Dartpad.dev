class CalcMateria {
  // Atributos da classe 
  late double altM;   // Altura da matéria-prima
  late double compM;  // Comprimento da matéria-prima
  late double altA;   // Altura da primeira peça de corte
  late double compA;  // Comprimento da primeira peça de corte
  late double altB;   // Altura da segunda peça de corte
  late double compB;  // Comprimento da segunda peça de corte
  late double areaM;  // Área da matéria-prima
  late double aPecaA; // Área da primeira peça de corte
  late double quantA; // Quantidade de peças do tipo A que podem ser cortadas
  late double sobra;  // Sobras de material após o corte

  // Método para definir a altura da matéria-prima
  void setAltM(double v) {
    altM = v;
  }

  // Método para obter a altura da matéria-prima
  double getAltM() {
    return altM; 
  }

  // Método para definir o comprimento da matéria-prima
  void setCompM(double v) {
    compM = v; 
  }

  // Método para obter o comprimento da matéria-prima
  double getCompM() {
    return compM; 
  }

  // Método para definir a altura da primeira peça de corte
  void setAltA(double v) {
    altA = v; 
  }

  // Método para obter a altura da primeira peça de corte
  double getAltA() {
    return altA;
  }

  // Método para definir o comprimento da primeira peça de corte
  void setCompA(double v) {
    compA = v; 
  }

  // Método para obter o comprimento da primeira peça de corte
  double getCompA() {
    return compA;
  }

  // Método para definir a altura da segunda peça de corte
  void setAltB(double v) {
    altB = v; 
  }

  // Método para obter a altura da segunda peça de corte
  double getAltB() {
    return altB; 
  }

  // Método para definir o comprimento da segunda peça de corte
  void setCompB(double v) {
    compB = v; 
  }

  // Método para obter o comprimento da segunda peça de corte
  double getCompB() {
    return compB; 
  }

  // Método para calcular a área da matéria-prima
  void calcAreaM() {
    areaM = altM * compM; 
  }

  // Método para obter a área da matéria-prima
  double getcalcAreaM() {
    return areaM; 
  }

  // Método para calcular a área da primeira peça de corte
  void calcAPecaA() {
    aPecaA = altA * compA;
  }

  // Método para obter a área da primeira peça de corte
  double getcalcAPecaA() {
    return aPecaA;
  }

  // Método para calcular a quantidade de peças do tipo A que podem ser cortadas
  void calcQuantA() {
    quantA = areaM / aPecaA; 
  }

  // Método para obter a quantidade de peças do tipo A que podem ser cortadas
  double getcalcQuantA() {
    return quantA; 
  }

  // Método para calcular a sobra de material após o corte
  void calcSobra() {
    sobra = (altB * compB) - (areaM % aPecaA); 
    // Calcula a sobra como a diferença entre a área da peça B e o resto da divisão da área da matéria-prima pela área da peça A
  }

  // Método para obter a sobra de material após o corte
  double getcalcSobra() {
    return sobra; 
  }
}

// Função principal 
void main() {
  // Cria uma nova instância da classe CalcMateria
  var calculo1 = CalcMateria();
  
  // Define as dimensões da matéria-prima
  calculo1.setAltM(6);
  print('Altura da materia prima: ${calculo1.getAltM()}');
  calculo1.setCompM(5);
  print('Comprimento da materia prima: ${calculo1.getCompM()}');
  
  // Define as dimensões da primeira peça de corte
  calculo1.setAltA(3);
  print('Altura da primeira peça de corte: ${calculo1.getAltA()}');
  calculo1.setCompA(3);
  print('Comprimento da primeira peça de corte: ${calculo1.getCompA()}');
  
  // Define as dimensões da segunda peça de corte
  calculo1.setAltB(2);
  print('Altura da segunda peça de corte: ${calculo1.getAltB()}');
  calculo1.setCompB(2);
  print('Comprimento da segunda peça de corte: ${calculo1.getCompB()}');
  
  // Calcula e exibe a quantidade de peças do tipo A que podem ser cortadas
  calculo1.calcAreaM();
  calculo1.calcAPecaA();
  calculo1.calcQuantA();
  print('Quantidades de peças: ${calculo1.getcalcQuantA().toInt()}');
  
  // Calcula e exibe a sobra de material após o corte
  calculo1.calcSobra();
  print('Sobra de material: R\$${calculo1.getcalcSobra().toInt()}');
}
